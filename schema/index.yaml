swagger: '2.0'

info:
  title: Import / Export system settings
  description: Export system settings to a compressed file or Import from previous exported file
  version: '0.0.1'

schemes:
- http
- https

produces:
- application/json

paths:
  /system/import:
    put:
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UrlInfo'
      description: Put a download url with headers and import settings
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/UrlInfo'

  /system/export:
    post:
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UrlInfo'
      description: >
        Post a target url with headers, bundle would upload to target url and return download url.
        Target upload server should response in this json format:
        <pre>
          {
            "fieldname": "file",
            "url": "/api/v1/files/download/61256ff7db8b7b40e254b940ae639b8e"
          }
        </pre>
        ThingsPro has a built-in simple upload server which is already used by web. In general cases, using the built-in server is highly recommended. Request export to simple upload server with url: `https://localhost/api/v1/files/upload`
      responses:
        200:
          description: sucess
          schema:
            $ref: '#/definitions/UrlInfo'
          examples:
            {
              "application/json": {
                "url": "https://localhost/api/v1/files/upload"
              }
            }

definitions:
 UrlInfo:
  description: Url information
  type: object
  required:
  - url
  properties:
    url:
      description: Url address
      type: string
      minLength: 1
      maxLength: 4096
    headers:
      description: Headers
      type: object
  example:
    $ref: '#/externalDocs/x-mocks/UrlInfoExample'


externalDocs:
  url: '#'
  x-mocks:
    UrlInfoExample:
      {
        "url": "https://localhost/api/v1/files/upload",
        "headers": {
          "accessToken": "MOXAMOXA-TEST-SYSTEM"
        }
      }
